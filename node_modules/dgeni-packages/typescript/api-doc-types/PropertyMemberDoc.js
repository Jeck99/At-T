"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var encodeAnchor_1 = require("../utils/encodeAnchor");
var AccessorInfoDoc_1 = require("./AccessorInfoDoc");
var MemberDoc_1 = require("./MemberDoc");
var PropertyMemberDoc = (function (_super) {
    __extends(PropertyMemberDoc, _super);
    function PropertyMemberDoc(containerDoc, symbol, declaration, getAccessorDeclaration, setAccessorDeclaration, basePath, namespacesToInclude, isStatic) {
        var _this = _super.call(this, containerDoc, symbol, (declaration || getAccessorDeclaration || setAccessorDeclaration), basePath, namespacesToInclude, isStatic) || this;
        _this.name = _this.symbol.name;
        _this.anchor = encodeAnchor_1.encodeAnchor(_this.name);
        _this.id = _this.containerDoc.id + "." + _this.name;
        _this.aliases = _this.containerDoc.aliases.map(function (alias) { return alias + "." + _this.name; });
        // If this property has accessors then compute the type based on that instead
        _this.getAccessor = getAccessorDeclaration && new AccessorInfoDoc_1.AccessorInfoDoc('get', _this, getAccessorDeclaration, basePath, namespacesToInclude);
        _this.setAccessor = setAccessorDeclaration && new AccessorInfoDoc_1.AccessorInfoDoc('set', _this, setAccessorDeclaration, basePath, namespacesToInclude);
        _this.type = _this.type || _this.setAccessor && _this.setAccessor.parameters[0].split(/:\s?/)[1] || '';
        _this.content = _this.content || _this.setAccessor && _this.setAccessor.content || '';
        return _this;
    }
    return PropertyMemberDoc;
}(MemberDoc_1.MemberDoc));
exports.PropertyMemberDoc = PropertyMemberDoc;
//# sourceMappingURL=PropertyMemberDoc.js.map